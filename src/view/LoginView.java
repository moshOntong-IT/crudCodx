package view;

import java.awt.Point;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.EmployeeModel;
import services.UserController;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ACER
 */
public class LoginView extends javax.swing.JFrame {

    /**
     * Creates new form LoginView
     */
    private int x;
    private int y;
    private UserController controller;
    private boolean isExist;
    private long counter;
    private EmployeeModel employee;

    public LoginView(UserController controller) {
        this.controller = controller;

        initComponents();
        setComponents();
        frameSetting();
    }

    private void frameSetting() {
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/assets/iconLogo.png"));
        this.setIconImage(imageIcon.getImage());
    }

    private void setComponents() {
        setLocationRelativeTo(null);
    }

    private boolean isReady() {
        boolean flag = true;
        String username = usernameField.getText();
        String password = String.valueOf(passwordField.getPassword());

        String message = "All field is not empty";
        if (username.equals("Username") && password.equals("Password")) {
            flag = false;
            message = "Don't leave any fields blank";

        } else if (username.equals("") || password.equals("")) {
            flag = false;

            if (username.equals("") && password.equals("")) {
                message = "Don't leave any fields blank";
            } else if (username.equals("")) {
                message = "Username Field is empty";
            } else if (password.equals("")) {
                message = "Password Field is empty";
            }

        }

        if (!flag) {
            System.out.println("[Error]: " + message);
            JOptionPane.showMessageDialog(null, message, "Invalid Account", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("[SUCCESS]: " + message);
        }
        return flag;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new javax.swing.JPanel();
        background = new javax.swing.JLabel();
        frameBar = new javax.swing.JPanel();
        minLabel = new javax.swing.JLabel();
        exitLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        userfieldPane = new javax.swing.JPanel();
        avatarIconLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordFieldPane = new javax.swing.JPanel();
        avatarIconLabel1 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backPanel.setBackground(new java.awt.Color(255, 255, 255));
        backPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                backPanelMouseDragged(evt);
            }
        });
        backPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backPanelMousePressed(evt);
            }
        });
        backPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/rightWallpaper.png"))); // NOI18N
        backPanel.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 500));

        frameBar.setBackground(new java.awt.Color(255, 255, 255));
        frameBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8_minus_48px_1 1.png"))); // NOI18N
        minLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minLabelMouseClicked(evt);
            }
        });
        frameBar.add(minLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        exitLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exitButton.png"))); // NOI18N
        exitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
        });
        frameBar.add(exitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 30, 30));

        backPanel.add(frameBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(592, 17, 82, 30));

        jLabel1.setFont(new java.awt.Font("Baloo Bhai", 0, 35)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(52, 65, 143));
        jLabel1.setText("Sign in to CODX");
        backPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(403, 93, -1, -1));

        userfieldPane.setBackground(new java.awt.Color(236, 236, 236));
        userfieldPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        avatarIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8_user_15px 1.png"))); // NOI18N
        userfieldPane.add(avatarIconLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 10, 15, 15));

        usernameField.setBackground(new java.awt.Color(236, 236, 236));
        usernameField.setFont(new java.awt.Font("Baloo Bhai", 0, 12)); // NOI18N
        usernameField.setForeground(new java.awt.Color(95, 95, 95));
        usernameField.setText("Username");
        usernameField.setBorder(null);
        userfieldPane.add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 8, 155, 19));

        backPanel.add(userfieldPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 202, 210, 35));

        passwordFieldPane.setBackground(new java.awt.Color(236, 236, 236));
        passwordFieldPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        avatarIconLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8_password_15px 1.png"))); // NOI18N
        passwordFieldPane.add(avatarIconLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 10, 15, 15));

        passwordField.setBackground(new java.awt.Color(236, 236, 236));
        passwordField.setFont(new java.awt.Font("Baloo Bhai", 0, 12)); // NOI18N
        passwordField.setForeground(new java.awt.Color(95, 95, 95));
        passwordField.setText("Password");
        passwordField.setToolTipText("Enter your password");
        passwordField.setBorder(null);
        passwordFieldPane.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 8, 155, 19));

        backPanel.add(passwordFieldPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 271, 210, 35));

        loginButton.setBackground(new java.awt.Color(52, 65, 143));
        loginButton.setFont(new java.awt.Font("Baloo Bhai", 0, 17)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("LOGIN");
        loginButton.setBorder(null);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        backPanel.add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 337, 211, 37));

        getContentPane().add(backPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        setBounds(0, 0, 700, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void minLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minLabelMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minLabelMouseClicked

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked

        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void backPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanelMouseDragged
        Point coord = evt.getLocationOnScreen();
        setLocation(coord.x - x, coord.y - y);
    }//GEN-LAST:event_backPanelMouseDragged

    private void backPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanelMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_backPanelMousePressed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String username = usernameField.getText();
        String password = String.valueOf(passwordField.getPassword());
        isExist = false;
        long attempts = 0;
        boolean isLogin = true;
        boolean isLocked = false;

        String messageLogin = "Login Success!";
        //checking useer 
        if (isReady()) {
            controller.getEmployeeList(((model) -> {
                if (username.equals(model.getUsername())) {

                    employee = model;
                    isExist = true;
                }
            }));

            if (isExist) {
                if (!password.equals(employee.getPassword())) {
                    messageLogin = "Username and Password unmatched";
                    isLogin = false;
                    //printing attempts remain of the user exclude admin.

                    if (!username.equals("admin")) {
                        attempts = controller.setIncreaseCounter(employee);
                        setCounter(attempts);
                        messageLogin += ". You only have " + (3 - attempts) + " attempts remain";
                    }

                }

                //if the counter reached 3 attempts
                if (employee.getCounter() == 3 || employee.isLocked()) {
                    isLocked = true;
                    isLogin = false;
                }

                if (isLogin) {
                    System.out.println("[SUCCESS]:" + messageLogin);

                    if (username.equals("admin")) {
                        JOptionPane.showMessageDialog(null, messageLogin, "Message", JOptionPane.INFORMATION_MESSAGE);
                        new AdminHomeView(controller).setVisible(true);
                        System.out.println("[INFO]: Admin Panel is running...");
                    } else {
                        employee.setCounter(0);
                        controller.updateEmployee(employee);
                        JOptionPane.showMessageDialog(null, messageLogin, "Message", JOptionPane.INFORMATION_MESSAGE);
                        controller.setCounterDefault(employee);
                        new EmployeeeView(employee, controller).setVisible(true);
                        System.out.println("[INFO]: Employee Panel is running...");

                    }
                    dispose();

                } else if (isLocked) {
                    messageLogin = "[INFO]: Account is locked";
                    System.out.println(messageLogin);

                    employee.setLocked(true);
                    controller.updateEmployee(employee);
                    new LockedView(controller).setVisible(true);
                    dispose();
                } else {
                    System.out.println("[Error]:" + messageLogin);
                    JOptionPane.showMessageDialog(null, messageLogin, "Invalid Account", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                messageLogin = "Account is not exist";
                JOptionPane.showMessageDialog(null, messageLogin, "Invalid Account", JOptionPane.ERROR_MESSAGE);
            }

        }


    }//GEN-LAST:event_loginButtonActionPerformed

    public long getCounter() {
        return counter;
    }

    public void setCounter(long counter) {
        this.counter = counter;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginView(null).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarIconLabel;
    private javax.swing.JLabel avatarIconLabel1;
    private javax.swing.JPanel backPanel;
    private javax.swing.JLabel background;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JPanel frameBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel minLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPanel passwordFieldPane;
    private javax.swing.JPanel userfieldPane;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
